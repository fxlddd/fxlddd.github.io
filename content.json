[{"title":"Hello World","date":"2019-12-06T10:40:39.685Z","path":"2019/12/06/hello-world/","text":"本消息来自Windows测试 日常学习还是觉得Win10比Ubuntu方便些，故切回win10 了。 Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"GitHub基本指令","date":"2017-03-31T08:22:07.000Z","path":"2017/03/31/GitHub基本指令/","text":"很早就准备实践学习github的使用，无奈刚开始有点排斥命令行，所以耽搁了很久。经过几次尝试使用Linux，终于在第三次成功切换到Ubuntu，成为学习和开发的主要工具，不得不说Linux相比于Windows开发和作业效率要高很多,以至于对命令行愈发喜爱。恰逢放假,真是天时地利人和刚好可以学习一下github,本笔记主要来源与《GitHub入门与实践》一书的第四章。 1.基础操作在工作目录初始化仓库:git init查看仓库状态:git status向暂存库区中添加文件:git add 保存仓库的历史记录:git commit 记述一行提交信息: git commit -m &quot;commit information&quot;记述详细提交信息:直接使用:git commit即可,编辑器会显示如下结果: 1 GNU nano 2.5.3 File: ...xl&#x2F;github&#x2F;Hello-World&#x2F;.git&#x2F;COMMIT_EDITMSG2# Please enter the commit message for your changes. Lines starting3# with &#39;#&#39; will be ignored, and an empty message aborts the commit.4# On branch master5# Your branch is ahead of &#39;origin&#x2F;master&#39; by 5 commits.6# (use &quot;git push&quot; to publish your local commits)7#8# Changes to be committed:9# modified: README.md10# 第一行:用一行文字简述提交的更改内容第二行:空行第三行:技术更改的原因和详细内容 查看提交后的状态:git status2. 查看提交日志:git log 只显示提交信息的第一行:git log --pretty=short只显示制定目录,文件的日志:git log &quot;FileName&quot;显示文件的更改:git log -p3. 查看更改前后的差别:git diff查看当前工作树与暂存区的差别:git diff查看工作树与最新提交的差别:git diff HEAD(务必在commit之前执行该命令) 2.分支的操作显示分支一览表:git branch创建分支:git branch NewBranch切换分支:git checkout BranchName切换到上一个分支:git checkout -以列表形式查看分支:git log --graph 特性分支:Git创建分支不需要连接中央仓库,用来实现单一特性,在日常开发中往往创建多个特性分支,同时保留一个稳定分支,稳定分支通常由master担当.修复bug时也需要在创建新分支,在新分支中进行修正。 合并分支:git merge将特性分支合并到主分支:git merge --no-ff BranchName,随后编辑器会启动用于录入合并条件的信息。 ### 3.更改提交的操作 查看历史操作的目标时间点哈希值:`git reflog` 回溯到历史操作时间点:`git reset --hard HashCode`(哈希值只要输入4位就可以执行) 这部分暂时还没有弄懂0.0 so sad,日后用到再更新… ### 4.推送到远程仓库 1. 添加远程仓库:git remote add 使用该指令将github的仓库设置为本地仓库的远程仓库: 1git remote add helloworld git@github.com:fxlddd&#x2F;Hello-World.git 执行指令后,Git会自动将`fxlddd/Hello-World.git`helloworld。 2. 推送至远程仓库:git push - 推送到master分支 将本地仓库的内容推送到远程仓库中,需要用到此命令: 1git push -u helloworld master 其中-u参数可以在推送的同时,将helloworld仓库的master分支设置为本地仓库当前分支的upstream.方便以后运行git pull命令从远程仓库获取内容时可以直接从helloworld的master分支获取内容,省去添加参数麻烦。 推送到master以外的分区 1git push -u helloworld BranchName ### 5.从远程仓库获取 1. 获取远程仓库:git clone clong之前切记切换目录路径,不要与之前操作的仓库同目录下。 1git clone git@github.com fxlddd&#x2F;Hello-World.git 克隆后本地仓库默认的分支和仓库名与远程仓库完全相同。 2. 获取远程分支 1git checkout -b BranchName helloworld&#x2F;BranchName 其中前面`git checkout -b BranchName`部分为创建本地分区并切换到该分区,后面的`helloworld/BranchName`为所创建分支的内容来源。 3. 获取最新的远程仓库分支 1git pull helloworld BranchName PS:边写边操作大致明白了简单的git操作，不过对于分支的运用还是迷迷糊糊。","tags":[{"name":"笔记","slug":"笔记","permalink":"https://xinlong.fan/tags/%E7%AC%94%E8%AE%B0/"},{"name":"GitHub","slug":"GitHub","permalink":"https://xinlong.fan/tags/GitHub/"}]},{"title":"Hexo博客笔记","date":"2017-03-29T07:04:38.000Z","path":"2017/03/29/Hexo博客笔记/","text":"经过一个晚上以及一个中午的折腾，人生第一个博客终于搭建好了，在这里感谢Leo-jinghui中博客的指导以及litten所提供的hexo博客模板。本篇博文仅简略记录以供日后查看，记录的指令主要来源于下面两篇博文，若您有搭建博客的需求，请查看以下两篇博文: (1)20分钟教你使用hexo搭建github博客(2)Hexo搭建个人博客 新建文章可以使用指令 1hexo new &quot;postName&quot; 来新建文章，也可以直接在/source/_posts文件夹中新建md文件。 新建页面1hexo new page &quot;pageName&quot; ### 文章格式 1---2title: 填写标题3tags:4- tag15- tag26date: 2016&#x2F;6&#x2F;06 12:20:257reward: 是否支持打赏,填写true或者false8keywords: 关键词1 关键词2...9description: 填写描述10--- ### 让文章显示一部分 >问:如何让文章想只显示一部分和一个 阅读全文 的按钮？ 答:在文章中加一个 `` ， `` 后面的内容就不会显示出来了。 ### 本地预览博客 当编写好博客保存后，可以使用在进入博客目录后使用指令 1hexo server 来预览所编写的博客，或者简写为 1hexo s 通过浏览器输入地址localhost:4000来预览网页。 ### 部署（同步）网页到github 当预览后无错误后就可以部署本地代码到github上了，部署时可以使用一下三部来操作: 1hexo clean2hexo generate3hexo deploy 可以简写为: 1hexo clean2hexo g -d ### 其他Hexo主题: [主题入口](https://github.com/hexojs/hexo/wiki/Themes) #### PS: Hexo对MarkDown语法检测太严格了，###与标题之间要空格 #### PSS: YILIAZ主题中修改头像背景图片在/themes/yilia/layout/_partial/left-col.ejs文件中的第二行中，例如目前改动的: 1&lt;div class&#x3D;&quot;overlay&quot; style&#x3D;&quot;background: url(&#39;http:&#x2F;&#x2F;fanxinlong.com&#x2F;assets&#x2F;img&#x2F;background.jpg&#39;) no-repeat center bottom;background-size: cover;&quot;&gt;&lt;&#x2F;div&gt;","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://xinlong.fan/tags/Hexo/"},{"name":"笔记","slug":"笔记","permalink":"https://xinlong.fan/tags/%E7%AC%94%E8%AE%B0/"}]}]